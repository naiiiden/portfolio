*, *::before, *::after {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
}

body {
  min-height: 100vh;
  line-height: 1.5;
}

p, h1, h2, h3, h4, h5, h6 {
  overflow-wrap: break-word;
  -webkit-hyphens: auto;
          hyphens: auto;
}

img, video, picture, canvas, svg {
  max-width: 100%;
  height: auto;
  display: block;
}

iframe {
  border: none;
}

input, button, textarea, select, optgroup {
  font-family: inherit;
  font-size: inherit;
}

a, button, details, select,
input[type=button],
input[type=checkbox],
input[type=file],
input[type=image],
input[type=radio],
input[type=range],
input[type=reset],
input[type=submit] {
  cursor: pointer;
}

button[disabled], input[disabled] {
  cursor: default;
}

a, a:visited {
  color: inherit;
  text-decoration: none;
}

ul, ol {
  list-style: none;
}

.sr-only {
  position: absolute;
  width: 1px;
  height: 1px;
  margin: -1px;
  clip: rect(0, 0, 0, 0);
}

html {
  scroll-behavior: smooth;
}

@media (prefers-reduced-motion: reduce) {
  *, *::before, *::after {
    transition: none !important;
    animation: none !important;
  }
  html {
    scroll-behavior: auto !important;
  }
}
@font-face {
  font-family: "Helmet";
  src: url("./fonts/Helmet-Regular.ttf");
}
@font-face {
  font-family: "NeueMontreal";
  src: url("./fonts/PPNeueMontreal-Medium.otf");
}
.mobile-message {
  display: none;
}

@media (pointer: coarse) {
  .mobile-message {
    position: absolute;
    inset: 0 0 0 0;
    text-transform: uppercase;
    animation: remove 6s forwards;
  }
  .mobile-message p {
    font-size: 2rem;
  }
  @keyframes remove {
    100% {
      display: none;
    }
  }
}
::-moz-selection {
  background: black;
  color: white;
}
::selection {
  background: black;
  color: white;
}

body {
  background: white;
}
body .heading {
  font-family: Helmet, sans-serif;
  font-size: clamp(4rem, 14vw, 12.5rem);
  line-height: 0.75;
  -webkit-user-select: none;
     -moz-user-select: none;
          user-select: none;
}
body .heading:nth-child(3) {
  font-size: clamp(4rem, 12.5vw, 11.25rem);
  font-weight: 700;
  display: flex;
}
@media (pointer: fine) {
  body .heading:nth-child(3) .no-cursor {
    display: none;
  }
}
body .heading:nth-child(3) span:nth-of-type(1):not(.no-cursor, :nth-child(4)) {
  -webkit-margin-start: -0.5rem;
          margin-inline-start: -0.5rem;
  letter-spacing: -1rem;
  font-size: clamp(4rem, 12.5vw, 11.25rem);
  display: flex;
  flex-direction: column;
  align-items: center;
}
body main {
  position: relative;
  z-index: 1;
}
body main .full-page-wrapper {
  min-height: 800px;
  height: 100vh;
  display: grid;
}
body main .full-page-wrapper:nth-child(1) {
  border: 1px solid yellow;
}
body main .main-text-container {
  width: -moz-fit-content;
  width: fit-content;
}
body main a[href="#selected-works"] {
  width: -moz-fit-content;
  width: fit-content;
  font-size: clamp(2rem, 6vw, 5.5rem);
  justify-self: flex-end;
  margin-top: auto;
  -webkit-user-select: none;
     -moz-user-select: none;
          user-select: none;
  border-bottom: none;
}
@media (pointer: coarse) {
  @keyframes display {
    100% {
      opacity: 1;
      visibility: visible;
    }
  }
  body main input, body main label, body main canvas {
    display: none;
  }
}
body p {
  font-family: NeueMontreal, sans-serif;
  font-size: clamp(1rem, 3vw, 1.25rem);
  -webkit-hyphens: initial;
          hyphens: initial;
}
body h2, body a {
  font-family: Helmet, sans-serif;
}
body .text {
  padding: 0.5rem 0 0.5rem clamp(0rem, 1.5vw, 0.85rem);
  max-width: 675px;
  line-height: 1.75;
}
body .uppercase {
  text-transform: uppercase;
}

@media screen and (min-width: 1200px) {
  .full-page-wrapper {
    grid-template-columns: 675px 1fr;
  }
  a[href="#selected-works"] {
    justify-self: center !important;
  }
}
@media (pointer: fine) {
  canvas {
    position: absolute;
    top: 0;
    left: 0;
    z-index: -1;
  }
}
@media (prefers-color-scheme: dark) {
  ::-moz-selection {
    background: white;
    color: black;
  }
  ::selection {
    background: white;
    color: black;
  }
  body {
    background: black;
    color: white;
  }
}
@media (any-pointer: fine) {
  body, a, input, button, label {
    cursor: none;
  }
  .cursor {
    position: fixed;
    top: -2rem;
    left: -2rem;
    width: 1.5rem;
    height: 1.5rem;
    border-radius: 50%;
    background-color: aliceblue;
    pointer-events: none;
    z-index: 9999;
    mix-blend-mode: difference;
  }
}
a[href] {
  font-size: clamp(1.25rem, 3vw, 1.5rem);
  display: inline-block;
  border-bottom: 2px solid black;
  line-height: 1;
  transition: 0.2s;
}
a[href] span {
  display: none;
}
a[href]:active, a[href]:focus-visible {
  background: black;
  color: white;
  transition: 0.2s;
}
@media (prefers-color-scheme: dark) {
  a[href] {
    border-bottom: 2px solid white;
  }
  a[href]:active, a[href]:focus-visible {
    background: white;
    color: black;
    transition: 0.2s;
  }
}

@media (hover: hover) {
  a {
    position: relative;
  }
  a[href]:hover {
    border-bottom: none;
  }
  a[href] .left, a[href] .right {
    display: unset;
    position: absolute;
    width: 50%;
    height: 100%;
    top: 0;
    color: transparent;
    letter-spacing: -0.5rem;
    -webkit-user-select: none;
       -moz-user-select: none;
            user-select: none;
    transition: 0.2s;
  }
  a[href] .left:hover, a[href] .right:hover {
    z-index: 100;
    width: 100%;
    background: black;
    color: white;
    letter-spacing: unset;
    transition: 0.3s;
  }
  a[href] .left {
    left: 0;
  }
  a[href] .right {
    right: 0;
  }
  a[href] .right:hover {
    direction: rtl;
  }
}
@media (hover: hover) and (prefers-color-scheme: dark) {
  a[href] .left:hover, a[href] .right:hover {
    background: white;
    color: black;
  }
}
input {
  -webkit-appearance: none;
     -moz-appearance: none;
          appearance: none;
}

input:checked + label, input:focus-visible + label {
  color: white;
  text-shadow: -1px -1px 0 black, 1px -1px 0 black, -1px 1px 0 black, 1px 1px 0 black;
}

input:checked + label > span span {
  transform: rotate(90deg) translate(-10px, -10px);
}

@media (prefers-color-scheme: dark) {
  input:checked + label, input:focus-visible + label {
    color: black;
    text-shadow: -1px -1px 0 white, 1px -1px 0 white, -1px 1px 0 white, 1px 1px 0 white;
  }
}
#selected-works {
  border: 1px solid red;
}/*# sourceMappingURL=general.css.map */